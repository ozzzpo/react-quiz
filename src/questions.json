{
  "questions": [
    {
      "question": "Какой фреймворк для JS наиболее популярен?",
      "options": ["Angular", "React", "Svelte", "Vue"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Какая компания изобрела React?",
      "options": ["Google", "Apple", "Netflix", "Facebook"],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "Как называются строительные блоки в React?",
      "options": ["Компоненты", "Блоки", "Элементы", "Эффекты"],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "Как называется синтаксис, используемый для описания UI React-приложения?",
      "options": ["FBJ", "Babel", "JSX", "ES2015"],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "Каким образом данные передаются между компонентами?",
      "options": [
        "От родительских к дочерним",
        "От дочерних к родительским",
        "Обоими способами",
        "По желанию разработчика"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "Посредством чего данные передаются в дочерний элемент?",
      "options": ["Состояние", "Props", "PropTypes", "Параметры"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Когда лучше использовать производное состояние?",
      "options": [
        "Когда нет необходимости ре-рендерить компонент при изменении состояния",
        "Когда нужно синхронизировать состояние с эффектом",
        "Когда состояние должно быть открыто для всех компонентов",
        "Когда состояние может быть вычислено на основе существующего состояния"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "Что запускает ре-рендер в React?",
      "options": [
        "Запуск эффекта",
        "Передача props",
        "Обновление состояния",
        "Добавление слушателей события в DOM"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "Когда мы напрямую \"касаемся\" DOM в React?",
      "options": [
        "Когда нужно поставить слушатель события",
        "Когда необходимо изменить UI",
        "Когда добавляем стили",
        "Почти никогда"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "В какой ситуации мы используем коллбэк чтобы обновить состояние?",
      "options": [
        "Когда обновление состояния происходит медленно",
        "Когда в состоянии сложная структура",
        "Когда обновление состояния должно работать быстрее",
        "Когда новое состояние опирается на предыдущее"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "Если мы передаём функцию в useState, когда она будет вызвана?",
      "options": [
        "На каждом ре-рендере",
        "При обновлении состояния",
        "При начальном рендере (монтировании) компонента",
        "При первом обновлении состояния"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Какой хук используется для получения данных с API на начальном рендере компонента?",
      "options": ["useState", "useEffect", "useRef", "useReducer"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Какие переменные должны находиться в массиве зависимостей хука useEffect?",
      "options": [
        "Обычно никакие",
        "Все переменные состояния",
        "Все переменные состояния и props, используемые в useEffect",
        "Все переменные, необходимые для очистки"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Эффект всегда будет запущен при начальном рендере.",
      "options": [
        "Правда",
        "Определяется массивом зависимостей",
        "Ложь",
        "Зависит от кода хука"
      ],
      "correctOption": 0,
      "points": 30
    },
    {
      "question": "Когда запускается эффект при отсутствии массива зависимостей?",
      "options": [
        "При монтировании компонента",
        "При размонтировании компонента",
        "При первом ре-рендере компонента",
        "Каждый раз, когда компонент ре-рендерится"
      ],
      "correctOption": 3,
      "points": 20
    }
  ]
}
